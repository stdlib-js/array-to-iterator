{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport isCollection from '@stdlib/assert-is-collection' ;\nimport iteratorSymbol from '@stdlib/symbol-iterator' ;\nimport arraylike2object from '@stdlib/array-base-arraylike2object' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Returns an iterator which iterates over each element in an array-like object.\n*\n* @param {Collection} src - input value\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} second argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = array2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction array2iterator( src ) {\n\tvar thisArg;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( '00m2a', src ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tfcn = arguments[ 1 ];\n\t\tif ( !isFunction( fcn ) ) {\n\t\t\tthrow new TypeError( format( '00m2S', fcn ) );\n\t\t}\n\t\tthisArg = arguments[ 2 ];\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tsetReadOnly( iter, 'next', next1 );\n\t} else {\n\t\tsetReadOnly( iter, 'next', next2 );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tget = arraylike2object( src ).getter;\n\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2() {\n\t\ti += 1;\n\t\tif ( FLG || i >= src.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn array2iterator( src, fcn, thisArg );\n\t\t}\n\t\treturn array2iterator( src );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default array2iterator;\n"],"names":["array2iterator","src","thisArg","iter","FLG","fcn","get","i","isCollection","TypeError","format","arguments","length","isFunction","setReadOnly","next1","next2","end","iteratorSymbol","factory","arraylike2object","getter","done","value","call"],"mappings":";;kjBAwDA,SAASA,EAAgBC,GACxB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACJ,IAAMC,EAAcP,GACnB,MAAM,IAAIQ,UAAWC,EAAQ,QAAST,IAEvC,GAAKU,UAAUC,OAAS,EAAI,CAE3B,IAAMC,EADNR,EAAMM,UAAW,IAEhB,MAAM,IAAIF,UAAWC,EAAQ,QAASL,IAEvCH,EAAUS,UAAW,EACrB,CAmBD,OAlBAJ,GAAK,EAKJO,EAFDX,EAAO,CAAA,EAEa,OADfE,EACuBU,EAEAC,GAE5BF,EAAaX,EAAM,SAAUc,GAGxBC,GACJJ,EAAaX,EAAMe,EAAgBC,GAGpCb,EAAMc,EAAkBnB,GAAMoB,OAEvBlB,EAQP,SAASY,IAER,OADAR,GAAK,EACAH,GAAOG,GAAKN,EAAIW,OACb,CACNU,MAAQ,GAGH,CACNC,MAASlB,EAAImB,KAAMtB,EAASI,EAAKL,EAAKM,GAAKA,EAAGN,GAC9CqB,MAAQ,EAET,CAQD,SAASN,IAER,OADAT,GAAK,EACAH,GAAOG,GAAKN,EAAIW,OACb,CACNU,MAAQ,GAGH,CACNC,MAASjB,EAAKL,EAAKM,GACnBe,MAAQ,EAET,CASD,SAASL,EAAKM,GAEb,OADAnB,GAAM,EACDO,UAAUC,OACP,CACNW,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,EAET,CAQD,SAASH,IACR,OAAKd,EACGL,EAAgBC,EAAKI,EAAKH,GAE3BF,EAAgBC,EACvB,CACF"}